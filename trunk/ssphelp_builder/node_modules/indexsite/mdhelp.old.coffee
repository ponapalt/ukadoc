fs = require('fs')
path = require('path')
jade = require('jade')
jsyaml = require('js-yaml')
$ = require('cheerio')
MarkdownDeep = require('markdowndeep')
mdd = new MarkdownDeep.Markdown()
mdd.ExtraMode = true

template_file = 'template.jade'
index_file = 'index.yaml'
template_index_file = 'index.jade'
doc_src_dir = 'src'
doc_dst_dir = 'dist'
hierarchy = false
check_fs = true

index = jsyaml.safeLoad fs.readFileSync index_file, 'utf8'
#root = $.load('<ul></ul>', xmlMode: true, decodeEntities: false)('ul')
#root = $('ul', '<ul></ul>', xmlMode: true, decodeEntities: false)

titles = {}

###
buildindex = (dom, elements, dir) ->
	unless dir?
		dir = ''
	for element in elements
		titles[element.place] = element.title
		li = $('<li></li>')
		if element.place? and (not check_fs or fs.existsSync path.join doc_src_dir, dir, element.place + '.md')
			li.append($('<a></a>').text(element.title).attr('href', element.place + '.html'))
		else
			li.text(element.title)
		dom.append li
		if element.children?
			ul = $('<ul></ul>')
			li.append ul
			if hierarchy
				next_dir = path.join dir, element.place
			else
				next_dir = dir
			buildindex ul, element.children, next_dir

buildindex root, index
###

buildindex = (elements, dir) ->
	unless dir?
		dir = ''
	for element in elements
		if element.place? and (not check_fs or fs.existsSync path.join doc_src_dir, dir, element.place + '.md')
			element.has_link = true
		if element.children?
			if hierarchy
				unless element.place?
					throw 'no place'
				next_dir = path.join dir, element.place
			else
				next_dir = dir
			buildindex element.children, next_dir

buildindex index

jade_index = fs.readFileSync template_index_file, 'utf8'
index_template = jade.compile jade_index, pretty: true
index_html = index_template(elements: index, dir: '.', hierarchy: hierarchy)

#index_html = root.toString().replace /&#x(\w+);/g, (all, part, offset, src) -> String.fromCharCode parseInt(part, 16)

jade_template = fs.readFileSync template_file, 'utf8'
template = jade.compile jade_template, pretty: true
#template = jade.compileFileClient 't.jade', pretty: true

buildcontents = (root, elements) ->
	for element in elements
		if element.place?
			li.append($('<a></a>').text(element.title).attr('href', element.place + '.html'))
		else
			li.text(element.title)
		root.append li
		if element.children?
			ul = $('<ul></ul>')
			li.append ul
			buildindex ul, element.children

md_files = fs.readdirSync doc_src_dir
for md_file in md_files
	if match = md_file.match /^(.*)\.md$/
		place = match[1]
		title = titles[place]
		if not title
			console.warn "#{md_file} is not in index"
		html_file = md_file.replace /\.md$/, '.html'
		md = fs.readFileSync path.join(doc_src_dir, md_file), 'utf8'
		contents_html = mdd.Transform md
		html = template(title: title, contents: contents_html, menu: index_html)
		fs.writeFileSync path.join(doc_dst_dir, html_file), html, 'utf8'

